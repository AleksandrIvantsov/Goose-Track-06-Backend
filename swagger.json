{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Goose Track 06 Backend",
    "description": "ToDos tracking app",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://goose-track-06-backend.onrender.com/" }],
  "tags": [
    {
      "name": "Users",
      "description": "Registration and authorization endpoints"
    },
    {
      "name": "Tasks",
      "description": "Todos endpoints"
    }
  ],
  "paths": {
    "/api/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithTokenSerializer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "409": {
            "description": "Provided email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorConflictResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User authorization",
        "parameters": [],
        "requestBody": {
          "description": "Authorization's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithTokenSerializer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Current user information",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSerializer"
                }
              }
            }
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "User signed out successfully",
            "content": {}
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Create new task",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Task's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskSerializer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/{id}": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Update task",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Task's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdatingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskSerializer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotFoundResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete task",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Task deleted successfully",
            "content": {}
          },
          "401": {
            "description": "Bearer auth failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorUnauthorizedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorNotFoundResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Alex"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "AuthorizationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "TaskCreationRequest": {
        "type": "object",
        "required": ["title", "date", "start", "end", "priority", "category"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Task's title",
            "example": "Task1"
          },
          "date": {
            "type": "string",
            "description": "Task's date",
            "example": "2023-08-25"
          },
          "start": {
            "type": "string",
            "description": "Task's start time",
            "example": "09:00"
          },
          "end": {
            "type": "string",
            "description": "Task's end time",
            "example": "15:00"
          },
          "priority": {
            "type": "string",
            "description": "Task's priority",
            "example": "low",
            "enum": ["low", "medium", "high"]
          },
          "category": {
            "type": "string",
            "description": "Task's category",
            "example": "to-do",
            "enum": ["to-do", "in-progress", "done"]
          }
        }
      },
      "TaskUpdatingRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Task's title",
            "example": "Task1"
          },
          "date": {
            "type": "string",
            "description": "Task's date",
            "example": "2023-08-25"
          },
          "start": {
            "type": "string",
            "description": "Task's start time",
            "example": "09:00"
          },
          "end": {
            "type": "string",
            "description": "Task's end time",
            "example": "15:00"
          },
          "priority": {
            "type": "string",
            "description": "Task's priority",
            "example": "low",
            "enum": ["low", "medium", "high"]
          },
          "category": {
            "type": "string",
            "description": "Task's category",
            "example": "to-do",
            "enum": ["to-do", "in-progress", "done"]
          }
        }
      },
      "UserSerializer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Alex"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "1995-08-25"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380972563477"
          },
          "skype": {
            "type": "string",
            "description": "User's skype",
            "example": "alex_69"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar",
            "example": "https://www.example.com/images/823867328469.jpg"
          }
        }
      },
      "UserWithTokenSerializer": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserSerializer"
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZTdkNTFkYmYwYjI4YjMxNDlmZDE3MSIsImlhdCI6MTY5MjkxNDk3MywiZXhwIjoxNjkyOTk3NzczfQ.fdcVeFCCLsJyUInY2LaQFsleeEXOIYsGZQpFzfUFuJo"
          }
        }
      },
      "TaskSerializer": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Task's id",
            "example": "64e90804a67180aafb894854"
          },
          "title": {
            "type": "string",
            "description": "Task's title",
            "example": "Task1"
          },
          "date": {
            "type": "string",
            "description": "Task's date",
            "example": "2023-08-25"
          },
          "start": {
            "type": "string",
            "description": "Task's start time",
            "example": "09:00"
          },
          "end": {
            "type": "string",
            "description": "Task's end time",
            "example": "15:00"
          },
          "priority": {
            "type": "string",
            "description": "Task's priority",
            "example": "low",
            "enum": ["low", "medium", "high"]
          },
          "category": {
            "type": "string",
            "description": "Task's category",
            "example": "to-do",
            "enum": ["to-do", "in-progress", "done"]
          },
          "owner": {
            "type": "string",
            "description": "Task's owner",
            "example": "64e88095ca6abac87e9fa9af"
          }
        }
      },
      "errorBadRequestResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Bad request"
          }
        }
      },
      "errorConflictResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Email in use"
          }
        }
      },
      "errorUnauthorizedResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Not authorized"
          }
        }
      },
      "errorNotFoundResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Not found"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
